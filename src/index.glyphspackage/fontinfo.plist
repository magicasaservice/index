{
.appVersion = "3246";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
code = "a aacute abreve acircumflex adieresis adotbelow agrave ahook amacron aogonek aring aringacute atilde abreveacute abrevedotbelow abrevegrave abrevehook abrevetilde acircumflexacute acircumflexdotbelow acircumflexgrave acircumflexhook acircumflextilde";
name = lca_dflt;
},
{
code = "a.alt01 aacute.alt01 abreve.alt01 acircumflex.alt01 adieresis.alt01 adotbelow.alt01 agrave.alt01 ahook.alt01 amacron.alt01 aogonek.alt01 aring.alt01 aringacute.alt01 atilde.alt01 abreveacute.alt01 abrevedotbelow.alt01 abrevegrave.alt01 abrevehook.alt01 abrevetilde.alt01 acircumflexacute.alt01 acircumflexdotbelow.alt01 acircumflexgrave.alt01 acircumflexhook.alt01 acircumflextilde.alt01";
name = lca_alt1;
},
{
code = "uni0430 uni04D3 uni04D1";
name = lca_cyrl_dflt;
},
{
code = "uni0430.alt01 uni04D3.alt01 uni04D1.alt01";
name = lca_cyrl_alt1;
},
{
code = "g gbreve gcircumflex gcommaaccent gdotaccent";
name = lcg_dflt;
},
{
code = "g.alt01 gbreve.alt01 gcircumflex.alt01 gcommaaccent.alt01 gdotaccent.alt01";
name = lcg_alt1;
},
{
code = "zero one two three four five six seven eight nine";
name = numbers_dflt;
},
{
code = "zerosuperior onesuperior twosuperior threesuperior foursuperior fivesuperior sixsuperior sevensuperior eightsuperior ninesuperior";
name = numbers_sups;
},
{
code = "zeroinferior oneinferior twoinferior threeinferior fourinferior fiveinferior sixinferior seveninferior eightinferior nineinferior";
name = numbers_sinf;
},
{
code = "zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr";
name = numbers_numr;
},
{
code = "zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom";
name = numbers_dnom;
}
);
date = "2021-02-10 03:02:16 +0000";
familyName = Index;
featurePrefixes = (
{
code = "languagesystem DFLT dflt;   # Default
languagesystem latn dflt;   # Latin default
languagesystem cyrl dflt;   # Cyrillic default

";
name = Languagesystems;
},
{
code = "# ----------------
# LANGUAGE SYSTEMS
# ----------------

# --------------
# GLOBAL CLASSES
# --------------";
name = Prefix;
}
);
features = (
{
code = "	sub a from [a.alt01]; # 1 glyph(s)
	sub g from [g.alt01 g.alt02]; # 2 glyph(s)
	sub zero from [zero.alt01 zero.alt02 zero.numr zero.dnom]; # 4 glyph(s)
	sub one from [one.numr one.dnom]; # 2 glyph(s)
	sub two from [two.numr two.dnom]; # 2 glyph(s)
	sub three from [three.numr three.dnom]; # 2 glyph(s)
	sub four from [four.numr four.dnom]; # 2 glyph(s)
	sub five from [five.numr five.dnom]; # 2 glyph(s)
	sub six from [six.numr six.dnom]; # 2 glyph(s)
	sub seven from [seven.numr seven.dnom]; # 2 glyph(s)
	sub eight from [eight.numr eight.dnom]; # 2 glyph(s)
	sub nine from [nine.numr nine.dnom]; # 2 glyph(s)
	sub aacute from [aacute.alt01]; # 1 glyph(s)
	sub abreve from [abreve.alt01]; # 1 glyph(s)
	sub acircumflex from [acircumflex.alt01]; # 1 glyph(s)
	sub adieresis from [adieresis.alt01]; # 1 glyph(s)
	sub adotbelow from [adotbelow.alt01]; # 1 glyph(s)
	sub agrave from [agrave.alt01]; # 1 glyph(s)
	sub ahook from [ahook.alt01]; # 1 glyph(s)
	sub amacron from [amacron.alt01]; # 1 glyph(s)
	sub aogonek from [aogonek.alt01]; # 1 glyph(s)
	sub aring from [aring.alt01]; # 1 glyph(s)
	sub aringacute from [aringacute.alt01]; # 1 glyph(s)
	sub atilde from [atilde.alt01]; # 1 glyph(s)
	sub abreveacute from [abreveacute.alt01]; # 1 glyph(s)
	sub abrevedotbelow from [abrevedotbelow.alt01]; # 1 glyph(s)
	sub abrevegrave from [abrevegrave.alt01]; # 1 glyph(s)
	sub abrevehook from [abrevehook.alt01]; # 1 glyph(s)
	sub abrevetilde from [abrevetilde.alt01]; # 1 glyph(s)
	sub acircumflexacute from [acircumflexacute.alt01]; # 1 glyph(s)
	sub acircumflexdotbelow from [acircumflexdotbelow.alt01]; # 1 glyph(s)
	sub acircumflexgrave from [acircumflexgrave.alt01]; # 1 glyph(s)
	sub acircumflexhook from [acircumflexhook.alt01]; # 1 glyph(s)
	sub acircumflextilde from [acircumflextilde.alt01]; # 1 glyph(s)
	sub gbreve from [gbreve.alt01]; # 1 glyph(s)
	sub gcircumflex from [gcircumflex.alt01]; # 1 glyph(s)
	sub gcommaaccent from [gcommaaccent.alt01]; # 1 glyph(s)
	sub gdotaccent from [gdotaccent.alt01]; # 1 glyph(s)
	sub germandbls from [germandbls.alt01]; # 1 glyph(s)
	sub tilde from [tilde.alt01 tilde.case tilde.alt01.case]; # 3 glyph(s)
	sub macron from [macron.case]; # 1 glyph(s)
	sub dotaccent from [dotaccent.case]; # 1 glyph(s)
	sub dieresis from [dieresis.case]; # 1 glyph(s)
	sub hungarumlaut from [hungarumlaut.case]; # 1 glyph(s)
	sub acute from [acute.case]; # 1 glyph(s)
	sub grave from [grave.case]; # 1 glyph(s)
	sub circumflex from [circumflex.case]; # 1 glyph(s)
	sub caron from [caron.case]; # 1 glyph(s)
	sub breve from [breve.case breve.cyrl breve.cyrl_case]; # 3 glyph(s)
	sub ring from [ring.case]; # 1 glyph(s)
	sub ringacute from [ringacute.case]; # 1 glyph(s)
	sub hookcomb from [hookcomb.case]; # 1 glyph(s)
	sub breveacute from [breveacute.case]; # 1 glyph(s)
	sub brevegrave from [brevegrave.case]; # 1 glyph(s)
	sub brevehook from [brevehook.case]; # 1 glyph(s)
	sub brevetilde from [brevetilde.case]; # 1 glyph(s)
	sub dieresisacute from [dieresisacute.case]; # 1 glyph(s)
	sub dieresiscaron from [dieresiscaron.case]; # 1 glyph(s)
	sub dieresisgrave from [dieresisgrave.case]; # 1 glyph(s)
	sub circumflexacute from [circumflexacute.case]; # 1 glyph(s)
	sub circumflexbreve from [circumflexbreve.case]; # 1 glyph(s)
	sub circumflexgrave from [circumflexgrave.case]; # 1 glyph(s)
	sub circumflexhook from [circumflexhook.case]; # 1 glyph(s)
	sub dieresismacron from [dieresismacron.case]; # 1 glyph(s)
	sub circumflextilde from [circumflextilde.case]; # 1 glyph(s)
	sub uni0430 from [uni0430.alt01]; # 1 glyph(s)
	sub uni04D3 from [uni04D3.alt01]; # 1 glyph(s)
	sub uni04D1 from [uni04D1.alt01]; # 1 glyph(s)";
tag = aalt;
},
{
code = "	# glyph composition/decomposition
	@uc_basic = [A AE Aogonek B C Ccedilla D E Eogonek F G H I Iogonek J K L M N O OE Ohorn Oslash P Q R S Schwa T U Uhorn Uogonek V W X Y Z]; # 37 glyphs
	@acc_comb_top = [acutecomb breveacute brevecomb brevegrave brevehook brevetilde caroncomb caronslovakcomb circumflexacute circumflexbreve circumflexcomb circumflexgrave circumflexhook circumflextilde commaturnedtopcomb dieresisacute dieresiscaron dieresiscomb dieresisgrave dieresismacron dotaccentcomb gravecomb hookcomb horncomb hungarumlautcomb macroncomb ringcomb tildecomb]; # 28 glyphs
	@acc_comb_dflt = [breveacute brevegrave brevehook brevetilde circumflexacute circumflexbreve circumflexgrave circumflexhook circumflextilde dieresisacute dieresiscaron dieresisgrave dieresismacron hookcomb]; # 14 glyphs
	@acc_comb_case = [breveacute.case brevegrave.case brevehook.case brevetilde.case circumflexacute.case circumflexbreve.case circumflexgrave.case circumflexhook.case circumflextilde.case dieresisacute.case dieresiscaron.case dieresisgrave.case dieresismacron.case hookcomb.case]; # 14 glyphs

	lookup nonContextSubs {
		sub brevecomb acutecomb by breveacute;
		sub brevecomb gravecomb by brevegrave;
		sub brevecomb hookcomb by brevehook;
		sub brevecomb tildecomb by brevetilde;
		sub circumflexcomb acutecomb by circumflexacute;
		sub circumflexcomb gravecomb by circumflexgrave;
		sub circumflexcomb hookcomb by circumflexhook;
		sub circumflexcomb tildecomb by circumflextilde;
		sub circumflexcomb brevecomb by circumflexbreve;
		sub dieresiscomb acutecomb by dieresisacute;
		sub dieresiscomb caroncomb by dieresiscaron;
		sub dieresiscomb gravecomb by dieresisgrave;
		sub dieresiscomb macroncomb by dieresismacron;
	} nonContextSubs;

	lookup contextSubs {
		sub [L d l t] caroncomb' by caronslovakcomb; # /Lcaron /dcaron /lcaron /tcaron
		sub g commabelowcomb' by commaturnedtopcomb; # /gcommaaccent
		sub i' @acc_comb_top by dotlessi;
		sub j' @acc_comb_top by dotlessj;
		sub @uc_basic @acc_comb_dflt' by @acc_comb_case; # case accents
	} contextSubs;";
tag = ccmp;
},
{
code = "	# ordinals
	sub [a o] by [ordfeminine ordmasculine];";
tag = ordn;
},
{
code = "	# fractions
	sub one [slash fraction] two by onehalf;
	sub one [slash fraction] three by uni2153;
	sub two [slash fraction] three by uni2154;
	sub one [slash fraction] four by onequarter;
	sub three [slash fraction] four by threequarters;
	sub one [slash fraction] five by uni2155;
	sub two [slash fraction] five by uni2156;
	sub three [slash fraction] five by uni2157;
	sub four [slash fraction] five by uni2158;
	sub one [slash fraction] six by uni2159;
	sub five [slash fraction] six by uni215A;
	sub one [slash fraction] seven by uni2150;
	sub one [slash fraction] eight by uni215B;
	sub three [slash fraction] eight by uni215C;
	sub five [slash fraction] eight by uni215D;
	sub seven [slash fraction] eight by uni215E;
	sub one [slash fraction] nine by uni2151;";
tag = frac;
},
{
code = "	# numerators
	sub @numbers_dflt by @numbers_numr;";
tag = numr;
},
{
code = "	# denominators
	sub @numbers_dflt by @numbers_dnom;";
tag = dnom;
},
{
code = "	# superiors
	sub @numbers_dflt by @numbers_sups;";
tag = sups;
},
{
code = "	# inferiors
	sub @numbers_dflt by @numbers_sinf;";
tag = sinf;
},
{
code = "	# slashed zero
	sub zero by zero.alt01;";
tag = zero;
},
{
code = "	featureNames {
		name 3 1 0x0409 \"simple lowercase a\"; # Win / Unicode / English US
		name 1 0 0 \"simple lowercase a\"; #   Mac / Roman / English
	};
	# stylistic set 1 - single storey a
	sub @lca_dflt by @lca_alt1;
	sub @lca_cyrl_dflt by @lca_cyrl_alt1;";
tag = ss01;
},
{
code = "	featureNames {
		name 3 1 0x0409 \"simple lowercase g\"; # Win / Unicode / English US
		name 1 0 0 \"simple lowercase g\"; #   Mac / Roman / English
	};
	# stylistic set 2 - single storey g
	sub @lcg_dflt by @lcg_alt1;";
tag = ss02;
},
{
code = "	featureNames {
		name 3 1 0x0409 \"slashed number zero\"; # Win / Unicode / English US
		name 1 0 0 \"slashed number zero\"; #   Mac / Roman / English
	};
	# slashed zero
	sub zero by zero.alt01;";
tag = ss03;
},
{
code = "	featureNames {
		name 3 1 0x0409 \"plain number zero\"; # Win / Unicode / English US
		name 1 0 0 \"plain number zero\"; #   Mac / Roman / English
	};
	# plain zero
	sub zero by zero.alt02;";
tag = ss04;
},
{
code = "	featureNames {
		name 3 1 0x0409 \"alternate lowercase eszett\"; # Win / Unicode / English US
		name 1 0 0 \"alternate lowercase eszett\"; #   Mac / Roman / English
	};
	# alternative german eszett
	sub germandbls by germandbls.alt01;";
tag = ss05;
},
{
code = "	# stylistic alternates - all stylistic sets combined
	sub @lca_dflt by @lca_alt1;
	sub @lcg_dflt by @lcg_alt1;
	sub @lca_cyrl_dflt by @lca_cyrl_alt1;
	sub zero by zero.alt02;
	sub germandbls by germandbls.alt01;";
tag = salt;
},
{
code = "	# Created: Sun May 21 13:18:14 2017
	# PS Name: IBMEliotMonoB09-Thin
	# MM Inst: IBM Eliot Mono B09 Thin
	# exported from FontLab

	@mGC_bottom_0_0 = [cedillacomb commabelowcomb dotbelowcomb];
	@mGC_top_0_516 = [acutecomb breveacute brevecomb brevegrave brevehook brevetilde caroncomb circumflexacute circumflexbreve circumflexcomb circumflexgrave circumflexhook circumflextilde commaturnedtopcomb dieresisacute dieresiscaron dieresiscomb dieresisgrave dieresismacron dotaccentcomb gravecomb hookcomb hungarumlautcomb macroncomb ringcomb tildecomb];
	@mGC_top_0_698 = [breveacute.case brevegrave.case brevehook.case brevetilde.case circumflexacute.case circumflexbreve.case circumflexgrave.case circumflexhook.case circumflextilde.case dieresisacute.case dieresiscaron.case dieresisgrave.case dieresismacron.case hookcomb.case];

	markClass @mGC_bottom_0_0 <anchor 0 0> @MC_bottom;
	markClass @mGC_top_0_516 <anchor 0 516> @MC_top;
	markClass @mGC_top_0_698 <anchor 0 698> @MC_top;
	markClass caronslovakcomb <anchor 0 740> @MC_topright;
	markClass ogonekcomb <anchor 0 0> @MC_bottomright;

	lookup MARK_BASE_bottom {
		@bGC_R_bottom = [R S];
		@bGC_h_bottom = [h n];
		@bGC_i_bottom = [i dotlessi];
		@bGC_k_bottom = [k L];
		@bGC_l_bottom = [l m o v w x z A H I M N O T U V W X Y ohorn Ohorn Uhorn];
		@bGC_u_bottom = [u uhorn];
		pos base @bGC_R_bottom <anchor 302 0> mark @MC_bottom;
		pos base @bGC_h_bottom <anchor 305 0> mark @MC_bottom;
		pos base @bGC_i_bottom <anchor 332 0> mark @MC_bottom;
		pos base @bGC_k_bottom <anchor 337 0> mark @MC_bottom;
		pos base @bGC_l_bottom <anchor 300 0> mark @MC_bottom;
		pos base @bGC_u_bottom <anchor 296 0> mark @MC_bottom;
		pos base B <anchor 294 0> mark @MC_bottom;
		pos base C <anchor 313 0> mark @MC_bottom;
		pos base D <anchor 277 0> mark @MC_bottom;
		pos base E <anchor 307 0> mark @MC_bottom;
		pos base F <anchor 119 0> mark @MC_bottom;
		pos base G <anchor 304 0> mark @MC_bottom;
		pos base J <anchor 279 0> mark @MC_bottom;
		pos base K <anchor 323 0> mark @MC_bottom;
		pos base P <anchor 115 0> mark @MC_bottom;
		pos base Z <anchor 301 0> mark @MC_bottom;
		pos base a <anchor 275 0> mark @MC_bottom;
		pos base a.alt01 <anchor 290 0> mark @MC_bottom;
		pos base b <anchor 310 0> mark @MC_bottom;
		pos base c <anchor 316 0> mark @MC_bottom;
		pos base d <anchor 285 0> mark @MC_bottom;
		pos base e <anchor 306 0> mark @MC_bottom;
		pos base f <anchor 299 0> mark @MC_bottom;
		pos base r <anchor 269 0> mark @MC_bottom;
		pos base s <anchor 308 0> mark @MC_bottom;
		pos base t <anchor 378 0> mark @MC_bottom;
		pos base y <anchor 440 0> mark @MC_bottom;
	} MARK_BASE_bottom;


	lookup MARK_BASE_bottomright {
		@bGC_i_bottomright = [i dotlessi];
		pos base @bGC_i_bottomright <anchor 535 0> mark @MC_bottomright;
		pos base A <anchor 548 0> mark @MC_bottomright;
		pos base E <anchor 514 0> mark @MC_bottomright;
		pos base I <anchor 508 0> mark @MC_bottomright;
		pos base U <anchor 390 0> mark @MC_bottomright;
		pos base a <anchor 531 0> mark @MC_bottomright;
		pos base a.alt01 <anchor 475 0> mark @MC_bottomright;
		pos base e <anchor 384 0> mark @MC_bottomright;
		pos base u <anchor 473 0> mark @MC_bottomright;
	} MARK_BASE_bottomright;


	lookup MARK_BASE_top {
		@bGC_E_top = [E F];
		@bGC_G_top = [G K];
		@bGC_a.alt01_top = [a.alt01 g.alt01 q];
		@bGC_g_top = [g g.alt02 n];
		@bGC_l_top = [l A H I M N O P Q T U V W X Y Z Oslash Ohorn Uhorn];
		@bGC_m_top = [m o s v w x z oslash ohorn];
		@bGC_u_top = [u uhorn];
		pos base @bGC_E_top <anchor 309 698> mark @MC_top;
		pos base @bGC_G_top <anchor 313 698> mark @MC_top;
		pos base @bGC_a.alt01_top <anchor 290 516> mark @MC_top;
		pos base @bGC_g_top <anchor 305 516> mark @MC_top;
		pos base @bGC_l_top <anchor 300 698> mark @MC_top;
		pos base @bGC_m_top <anchor 300 516> mark @MC_top;
		pos base @bGC_u_top <anchor 296 516> mark @MC_top;
		pos base AE <anchor 393 698> mark @MC_top;
		pos base B <anchor 274 698> mark @MC_top;
		pos base C <anchor 325 698> mark @MC_top;
		pos base D <anchor 277 698> mark @MC_top;
		pos base J <anchor 306 698> mark @MC_top;
		pos base L <anchor 156 698> mark @MC_top;
		pos base R <anchor 299 698> mark @MC_top;
		pos base S <anchor 292 698> mark @MC_top;
		pos base a <anchor 275 516> mark @MC_top;
		pos base ae <anchor 298 516> mark @MC_top;
		pos base c <anchor 320 516> mark @MC_top;
		pos base dotlessi <anchor 332 516> mark @MC_top;
		pos base dotlessj <anchor 417 516> mark @MC_top;
		pos base e <anchor 302 516> mark @MC_top;
		pos base h <anchor 138 698> mark @MC_top;
		pos base p <anchor 310 516> mark @MC_top;
		pos base r <anchor 378 516> mark @MC_top;
		pos base y <anchor 297 516> mark @MC_top;
	} MARK_BASE_top;


	lookup MARK_BASE_topright {
		pos base L <anchor 273 740> mark @MC_topright;
		pos base d <anchor 545 740> mark @MC_topright;
		pos base l <anchor 416 740> mark @MC_topright;
		pos base t <anchor 389 760> mark @MC_topright;
	} MARK_BASE_topright;";
tag = mark;
}
);
fontMaster = (
{
axesValues = (
100
);
customParameters = (
{
name = underlineThickness;
value = 60;
},
{
name = underlinePosition;
value = -480;
},
{
name = "Master Icon Glyph Name";
value = L;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaLineGap;
value = 0;
},
{
name = strikeoutSize;
value = 60;
},
{
name = strikeoutPosition;
value = 840;
},
{
name = hheaAscender;
value = 3040;
},
{
name = hheaDescender;
value = -1070;
},
{
name = typoAscender;
value = 3040;
},
{
name = typoDescender;
value = -1070;
},
{
name = winAscent;
value = 3040;
},
{
name = winDescent;
value = 1070;
}
);
iconName = Light;
id = master01;
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Thin;
stemValues = (
59,
54
);
},
{
axesValues = (
400
);
customParameters = (
{
name = underlineThickness;
value = 170;
},
{
name = underlinePosition;
value = -464;
},
{
name = "Master Icon Glyph Name";
value = R;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaLineGap;
value = 0;
},
{
name = panose;
value = (
2,
0,
5,
3,
0,
0,
0,
2,
0,
4
);
},
{
name = strikeoutSize;
value = 170;
},
{
name = strikeoutPosition;
value = 890;
},
{
name = hheaAscender;
value = 3040;
},
{
name = hheaDescender;
value = -1070;
},
{
name = typoAscender;
value = 3040;
},
{
name = typoDescender;
value = -1070;
},
{
name = winAscent;
value = 3040;
},
{
name = winDescent;
value = 1070;
}
);
id = "661A777E-9960-44AA-8623-3AD7C626B4F3";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Regular;
stemValues = (
225,
191
);
},
{
axesValues = (
700
);
customParameters = (
{
name = underlineThickness;
value = 280;
},
{
name = underlinePosition;
value = -416;
},
{
name = "Master Icon Glyph Name";
value = B;
},
{
name = typoLineGap;
value = 0;
},
{
name = hheaLineGap;
value = 0;
},
{
name = panose;
value = (
2,
0,
10,
3,
0,
0,
0,
2,
0,
4
);
},
{
name = strikeoutSize;
value = 280;
},
{
name = strikeoutPosition;
value = 910;
},
{
name = hheaAscender;
value = 3040;
},
{
name = hheaDescender;
value = -1070;
},
{
name = typoAscender;
value = 3040;
},
{
name = typoDescender;
value = 1070;
},
{
name = winAscent;
value = 3040;
},
{
name = winDescent;
value = 1070;
}
);
iconName = Bold;
id = "D7CFBB37-D300-46E8-A355-ECFF19545BAA";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Bold;
stemValues = (
417,
324
);
}
);
instances = (
{
axesValues = (
100
);
instanceInterpolations = {
master01 = 1;
};
name = Thin;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 100;
},
{
axesValues = (
200
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.33333;
master01 = 0.66667;
};
name = Extralight;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 200;
},
{
axesValues = (
300
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.66667;
master01 = 0.33333;
};
name = Light;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 300;
},
{
axesValues = (
400
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 1;
};
name = Regular;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
},
{
axesValues = (
450
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.83333;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.16667;
};
name = Text;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
},
{
axesValues = (
500
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.66667;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.33333;
};
name = Medium;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 500;
},
{
axesValues = (
600
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.33333;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.66667;
};
name = Semibold;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 600;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
name = Bold;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 700;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
name = Heavy;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 800;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
name = Black;
properties = (
{
key = styleMapFamilyName;
value = "IBM Plex Mono Thin";
}
);
weightClass = 900;
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
note = "How razorback-jumping frogs can level six piqued gymnasts!";
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright 2017 IBM Corp. All rights reserved.";
}
);
},
{
key = designers;
values = (
{
language = dflt;
value = "Mike Abbink, Paul van der Laan, Pieter van Rosmalen";
}
);
},
{
key = designerURL;
value = "http://www.ibm.com";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
},
{
key = manufacturers;
values = (
{
language = dflt;
value = "Bold Monday";
}
);
},
{
key = manufacturerURL;
value = "http://www.boldmonday.com";
},
{
key = versionString;
value = "Version 2.003 2021";
}
);
settings = {
disablesNiceNames = 1;
};
stems = (
{
name = vStem0;
},
{
horizontal = 1;
name = hStem0;
}
);
unitsPerEm = 2816;
userData = {
UFO.lib = {
"com.type-invaders.encoding" = (
.notdef,
a,
a.alt01,
b,
c,
d,
e,
f,
g,
g.alt01,
g.alt02,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
zero,
zero.alt01,
zero.alt02,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
ampersand,
at,
hyphen,
softhyphen,
endash,
emdash,
underscore,
period,
ellipsis,
colon,
comma,
semicolon,
questiongreek,
quotesingle,
quotedbl,
quoteleft,
quoteright,
quotedblleft,
quotedblright,
quotesinglbase,
quotedblbase,
guilsinglleft,
guilsinglright,
guillemotleft,
guillemotright,
exclamdown,
exclam,
questiondown,
question,
parenleft,
parenright,
bracketleft,
bracketright,
braceleft,
braceright,
slash,
backslash,
fraction,
divisionslash,
percent,
perthousand,
bar,
brokenbar,
section,
paragraph,
copyright,
registered,
trademark,
ordfeminine,
ordmasculine,
degree,
prime,
primedbl,
asterisk,
dagger,
daggerdbl,
numbersign,
asciicircum,
asciitilde,
plus,
minus,
plusminus,
multiply,
divide,
equal,
approxequal,
notequal,
less,
greater,
lessequal,
greaterequal,
periodcentered,
anoteleia,
bullet,
lozenge,
logicalnot,
radical,
integral,
infinity,
estimated,
litre,
numerosign,
partialdiff,
currency,
cent,
Euro,
florin,
sterling,
dollar,
yen,
baht,
coloncurrency,
lira,
naira,
rupee,
won,
sheqel,
dong,
kip,
tugrik,
peso,
guarani,
hryvnia,
cedi,
tenge,
rupeeindian,
liraturkish,
ruble,
bitcoin,
fi,
fl,
aacute,
abreve,
acaron,
acircumflex,
adieresis,
adotbelow,
agrave,
ahook,
amacron,
aogonek,
aring,
aringacute,
atilde,
abreveacute,
abrevedotbelow,
abrevegrave,
abrevehook,
abrevetilde,
acircumflexacute,
acircumflexdotbelow,
acircumflexgrave,
acircumflexhook,
acircumflextilde,
aacute.alt01,
abreve.alt01,
acaron.alt01,
acircumflex.alt01,
adieresis.alt01,
adotbelow.alt01,
agrave.alt01,
ahook.alt01,
amacron.alt01,
aogonek.alt01,
aring.alt01,
aringacute.alt01,
atilde.alt01,
abreveacute.alt01,
abrevedotbelow.alt01,
abrevegrave.alt01,
abrevehook.alt01,
abrevetilde.alt01,
acircumflexacute.alt01,
acircumflexdotbelow.alt01,
acircumflexgrave.alt01,
acircumflexhook.alt01,
acircumflextilde.alt01,
ae,
aeacute,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
dcaron,
dcroat,
eth,
eacute,
ebreve,
ecaron,
ecircumflex,
edieresis,
edotaccent,
edotbelow,
egrave,
ehook,
emacron,
eogonek,
etilde,
ecircumflexacute,
ecircumflexdotbelow,
ecircumflexgrave,
ecircumflexhook,
ecircumflextilde,
schwa,
gbreve,
gcircumflex,
gcommaaccent,
gdotaccent,
gbreve.alt01,
gcircumflex.alt01,
gcommaaccent.alt01,
gdotaccent.alt01,
hbar,
hcircumflex,
dotlessi,
iacute,
ibreve,
icaron,
icircumflex,
idieresis,
idotbelow,
igrave,
ihook,
imacron,
iogonek,
itilde,
ij,
ijacute,
dotlessj,
jacute,
jcircumflex,
kcommaaccent,
kgreenlandic,
lacute,
lcaron,
lcommaaccent,
ldot,
lslash,
nacute,
ncaron,
ncommaaccent,
ntilde,
napostrophe,
eng,
oacute,
obreve,
ocaron,
ocircumflex,
odieresis,
odotbelow,
ograve,
ohook,
ohungarumlaut,
omacron,
oslash,
oslashacute,
otilde,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohornhook,
ohorntilde,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhook,
ocircumflextilde,
oe,
racute,
rcaron,
rcommaaccent,
sacute,
scaron,
scedilla,
scircumflex,
scommaaccent,
longs,
germandbls,
germandbls.alt01,
tbar,
tcaron,
tcommaaccent,
tcedilla,
thorn,
uacute,
ubreve,
ucaron,
ucircumflex,
udieresis,
udotbelow,
ugrave,
uhook,
uhungarumlaut,
umacron,
uogonek,
uring,
utilde,
uhorn,
uhornacute,
uhorndotbelow,
uhorngrave,
uhornhook,
uhorntilde,
udieresismacron,
udieresisacute,
udieresisgrave,
udieresiscaron,
wacute,
wcircumflex,
wdieresis,
wgrave,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhook,
ytilde,
zacute,
zcaron,
zdotaccent,
Aacute,
Abreve,
Acaron,
Acircumflex,
Adieresis,
Adotbelow,
Agrave,
Ahook,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehook,
Abrevetilde,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhook,
Acircumflextilde,
AE,
AEacute,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
Dcaron,
Dcroat,
Eth,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Edieresis,
Edotaccent,
Edotbelow,
Egrave,
Ehook,
Emacron,
Eogonek,
Etilde,
Ecircumflexacute,
Ecircumflexdotbelow,
Ecircumflexgrave,
Ecircumflexhook,
Ecircumflextilde,
Schwa,
Gbreve,
Gcircumflex,
Gcommaaccent,
Gdotaccent,
Hbar,
Hcircumflex,
Iacute,
Ibreve,
Icaron,
Icircumflex,
Idieresis,
Idotaccent,
Idotbelow,
Igrave,
Ihook,
Imacron,
Iogonek,
Itilde,
IJ,
IJacute,
Jacute,
Jcircumflex,
Kcommaaccent,
Lacute,
Lcaron,
Lcommaaccent,
Ldot,
Lslash,
Nacute,
Ncaron,
Ncommaaccent,
Ntilde,
Eng,
Oacute,
Obreve,
Ocaron,
Ocircumflex,
Odieresis,
Odotbelow,
Ograve,
Ohook,
Ohungarumlaut,
Omacron,
Oslash,
Oslashacute,
Otilde,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhook,
Ohorntilde,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhook,
Ocircumflextilde,
OE,
Racute,
Rcaron,
Rcommaaccent,
Sacute,
Scaron,
Scedilla,
Scircumflex,
Scommaaccent,
Germandbls,
Tbar,
Tcaron,
Tcommaaccent,
Tcedilla,
Thorn,
Uacute,
Ubreve,
Ucaron,
Ucircumflex,
Udieresis,
Udotbelow,
Ugrave,
Uhook,
Uhungarumlaut,
Umacron,
Uogonek,
Uring,
Utilde,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhook,
Uhorntilde,
Udieresismacron,
Udieresisacute,
Udieresisgrave,
Udieresiscaron,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
Yacute,
Ycircumflex,
Ydotbelow,
Ydieresis,
Ygrave,
Yhook,
Ytilde,
Zacute,
Zcaron,
Zdotaccent,
mu,
Delta,
product,
summation,
Omega,
alpha,
alpha.alt01,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
kappa,
lambda,
uni03BC,
nu,
xi,
omicron,
pi,
rho,
sigma1,
sigma,
tau,
upsilon,
phi,
chi,
psi,
omega,
Alpha,
Beta,
Gamma,
uni0394,
Epsilon,
Zeta,
Eta,
Theta,
Iota,
Kappa,
Lambda,
Mu,
Nu,
Xi,
Omicron,
Pi,
Rho,
Sigma,
Tau,
Upsilon,
Phi,
Chi,
Psi,
uni03A9,
alphatonos,
alphatonos.alt01,
epsilontonos,
etatonos,
iotatonos,
iotadieresis,
iotadieresistonos,
omicrontonos,
upsilontonos,
upsilondieresis,
upsilondieresistonos,
omegatonos,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Iotadieresis,
Omicrontonos,
Upsilontonos,
Upsilondieresis,
Omegatonos,
uni0430,
uni0430.alt01,
uni0431,
uni0432,
uni0433,
uni0434,
uni0435,
uni0436,
uni0437,
uni0438,
uni0439,
uni043A,
uni043B,
uni043C,
uni043D,
uni043E,
uni043F,
uni0440,
uni0441,
uni0442,
uni0443,
uni0444,
uni0445,
uni0446,
uni0447,
uni0448,
uni0449,
uni044A,
uni044B,
uni044C,
uni044D,
uni044E,
uni044F,
uni0410,
uni0411,
uni0412,
uni0413,
uni0414,
uni0415,
uni0416,
uni0417,
uni0418,
uni0419,
uni041A,
uni041B,
uni041C,
uni041D,
uni041E,
uni041F,
uni0420,
uni0421,
uni0422,
uni0423,
uni0424,
uni0425,
uni0426,
uni0427,
uni0428,
uni0429,
uni042A,
uni042B,
uni042C,
uni042D,
uni042E,
uni042F,
uni04D3,
uni04D1,
uni04D3.alt01,
uni04D1.alt01,
uni04D5,
uni0453,
uni0491,
uni0493,
uni0495,
uni0450,
uni0451,
uni04D7,
uni0454,
uni04DD,
uni04C2,
uni0497,
uni04DF,
uni0499,
uni04CF,
uni04E5,
uni045D,
uni04E3,
uni045C,
uni049B,
uni049D,
uni04A1,
uni0459,
uni04A3,
uni045A,
uni04A5,
uni04E7,
uni0473,
uni04E9,
uni04AB,
uni04EF,
uni04F1,
uni04F3,
uni045E,
uni04AF,
uni04B1,
uni04B3,
uni04F5,
uni04B7,
uni04B9,
uni04F9,
uni0455,
uni045F,
uni0456,
uni0457,
uni0458,
uni0452,
uni045B,
uni04BB,
uni04D9,
uni04D2,
uni04D0,
uni04D4,
uni0403,
uni0490,
uni0492,
uni0494,
uni0400,
uni0401,
uni04D6,
uni0404,
uni04DC,
uni04C1,
uni0496,
uni04DE,
uni0498,
uni04C0,
uni04E4,
uni040D,
uni04E2,
uni040C,
uni049A,
uni049C,
uni04A0,
uni0409,
uni04A2,
uni040A,
uni04A4,
uni04E6,
uni0472,
uni04E8,
uni04AA,
uni04EE,
uni04F0,
uni04F2,
uni040E,
uni04AE,
uni04B0,
uni04B2,
uni04F4,
uni04B6,
uni04B8,
uni04F8,
uni0405,
uni040F,
uni0406,
uni0407,
uni0408,
uni0402,
uni040B,
uni04BA,
uni04D8,
zerosuperior,
onesuperior,
twosuperior,
threesuperior,
foursuperior,
fivesuperior,
sixsuperior,
sevensuperior,
eightsuperior,
ninesuperior,
zeroinferior,
oneinferior,
twoinferior,
threeinferior,
fourinferior,
fiveinferior,
sixinferior,
seveninferior,
eightinferior,
nineinferior,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
onehalf,
uni2153,
uni2154,
onequarter,
threequarters,
uni2155,
uni2156,
uni2157,
uni2158,
uni2159,
uni215A,
uni2150,
uni215B,
uni215C,
uni215D,
uni215E,
uni2151,
checkmark,
crossmark,
arrowleft,
arrowup,
arrowdown,
arrowright,
arrowupleft,
arrowupright,
arrowdownleft,
arrowdownright,
arrowupleftcorner,
arrowdownleftcorner,
arrowleftupcorner,
arrowrightupcorner,
arrowleftdowncorner,
arrowrightdowncorner,
arrowuprightcorner,
arrowdownrightcorner,
arrowleftarrowright,
arrowrightarrowleft,
arrowleftright,
arrowupdown,
arrowdowncounterclockhalf,
arrowdownclockhalf,
arrowhookleft,
arrowhookright,
arrowupleftcounterclock,
arrowuprightclock,
lighthorzbxd,
heavyhorzbxd,
lightvertbxd,
heavyvertbxd,
lighttrpldashhorzbxd,
heavytrpldashhorzbxd,
lighttrpldashvertbxd,
heavytrpldashvertbxd,
lightquaddashhorzbxd,
heavyquaddashhorzbxd,
lightquaddashvertbxd,
heavyquaddashvertbxd,
lightdnrightbxd,
dnlightrightheavybxd,
dnheavyrightlightbxd,
heavydnrightbxd,
lightdnleftbxd,
dnlightleftheavybxd,
dnheavyleftlightbxd,
heavydnleftbxd,
lightuprightbxd,
uplightrightheavybxd,
upheavyrightlightbxd,
heavyuprightbxd,
lightupleftbxd,
uplightleftheavybxd,
upheavyleftlightbxd,
heavyupleftbxd,
lightvertrightbxd,
vertlightrightheavybxd,
upheavyrightdnlightbxd,
dnheavyrightuplightbxd,
vertheavyrightlightbxd,
dnlightrightupheavybxd,
uplightrightdnheavybxd,
heavyvertrightbxd,
lightvertleftbxd,
vertlightleftheavybxd,
upheavyleftdnlightbxd,
dnheavyleftuplightbxd,
vertheavyleftlightbxd,
dnlightleftupheavybxd,
uplightleftdnheavybxd,
heavyvertleftbxd,
lightdnhorzbxd,
leftheavyrightdnlightbxd,
rightheavyleftdnlightbxd,
dnlighthorzheavybxd,
dnheavyhorzlightbxd,
rightlightleftdnheavybxd,
leftlightrightdnheavybxd,
heavydnhorzbxd,
lightuphorzbxd,
leftheavyrightuplightbxd,
rightheavyleftuplightbxd,
uplighthorzheavybxd,
upheavyhorzlightbxd,
rightlightleftupheavybxd,
leftlightrightupheavybxd,
heavyuphorzbxd,
lightverthorzbxd,
leftheavyrightvertlightbxd,
rightheavyleftvertlightbxd,
vertlighthorzheavybxd,
upheavydnhorzlightbxd,
dnheavyuphorzlightbxd,
vertheavyhorzlightbxd,
leftupheavyrightdnlightbxd,
rightupheavyleftdnlightbxd,
leftdnheavyrightuplightbxd,
rightdnheavyleftuplightbxd,
dnlightuphorzheavybxd,
uplightdnhorzheavybxd,
rightlightleftvertheavybxd,
leftlightrightvertheavybxd,
heavyverthorzbxd,
lightdbldashhorzbxd,
heavydbldashhorzbxd,
lightdbldashvertbxd,
heavydbldashvertbxd,
dblhorzbxd,
dblvertbxd,
dnsngrightdblbxd,
dndblrightsngbxd,
dbldnrightbxd,
dnsngleftdblbxd,
dndblleftsngbxd,
dbldnleftbxd,
upsngrightdblbxd,
updblrightsngbxd,
dbluprightbxd,
upsngleftdblbxd,
updblleftsngbxd,
dblupleftbxd,
vertsngrightdblbxd,
vertdblrightsngbxd,
dblvertrightbxd,
vertsngleftdblbxd,
vertdblleftsngbxd,
dblvertleftbxd,
dnsnghorzdblbxd,
dndblhorzsngbxd,
dbldnhorzbxd,
upsnghorzdblbxd,
updblhorzsngbxd,
dbluphorzbxd,
vertsnghorzdblbxd,
vertdblhorzsngbxd,
dblverthorzbxd,
lightarcdnrightbxd,
lightarcdnleftbxd,
lightarcupleftbxd,
lightarcuprightbxd,
lightdiaguprightdnleftbxd,
lightdiagupleftdnrightbxd,
lightdiagcrossbxd,
lightleftbxd,
lightupbxd,
lightrightbxd,
lightdnbxd,
heavyleftbxd,
heavyupbxd,
heavyrightbxd,
heavydnbxd,
lightleftheavyrightbxd,
lightupheavydnbxd,
heavyleftlightrightbxd,
heavyuplightdnbxd,
uphalfblock,
dneighthblock,
dnquarterblock,
dnthreeeighthsblock,
dnhalfblock,
dnfiveeighthsblock,
dnthreequartersblock,
dnseveneighthsblock,
fullblock,
leftseveneighthsblock,
leftthreequartersblock,
leftfiveeighthsblock,
lefthalfblock,
leftthreeeighthsblock,
leftquarterblock,
lefteighthblock,
righthalfblock,
lightshade,
mediumshade,
darkshade,
upeighthblock,
righteighthblock,
dnleftquadrant,
dnrightquadrant,
upleftquadrant,
upleftdnleftdnrightquadrant,
upleftdnrightquadrant,
upleftuprightdnleftquadrant,
upleftuprightdnrightquadrant,
uprightquadrant,
uprightdnleftquadrant,
uprightdnleftdnrightquadrant,
tilde,
tilde.alt01,
macron,
macron.alt01,
dotaccent,
dieresis,
dieresis.alt01,
hungarumlaut,
acute,
grave,
circumflex,
circumflex.alt01,
caron,
caron.alt01,
breve,
breve.alt01,
breve.cyrl,
ring,
ringacute,
commaturnedtop,
caronslovak,
cedilla,
ogonek,
tonos,
dieresistonos,
tildecomb,
macroncomb,
dotaccentcomb,
dieresiscomb,
hungarumlautcomb,
acutecomb,
gravecomb,
circumflexcomb,
caroncomb,
brevecomb,
ringcomb,
hookcomb,
commaturnedtopcomb,
caronslovakcomb,
horncomb,
cedillacomb,
dotbelowcomb,
commabelowcomb,
ogonekcomb,
breveacute,
brevegrave,
brevehook,
brevetilde,
dieresisacute,
dieresiscaron,
dieresisgrave,
circumflexacute,
circumflexbreve,
circumflexgrave,
circumflexhook,
dieresismacron,
circumflextilde,
tilde.case,
tilde.alt01.case,
macron.case,
dotaccent.case,
dieresis.case,
hungarumlaut.case,
acute.case,
grave.case,
circumflex.case,
caron.case,
breve.case,
breve.cyrl_case,
ring.case,
ringacute.case,
tonos.case,
hookcomb.case,
breveacute.case,
brevegrave.case,
brevehook.case,
brevetilde.case,
dieresisacute.case,
dieresiscaron.case,
dieresisgrave.case,
circumflexacute.case,
circumflexbreve.case,
circumflexgrave.case,
circumflexhook.case,
dieresismacron.case,
circumflextilde.case,
space,
nbspace,
fcclogo,
celogo
);
com.typemytype.robofont.layerOrder = (
);
};
UFOFormat = 2;
};
versionMajor = 2;
versionMinor = 3;
}
