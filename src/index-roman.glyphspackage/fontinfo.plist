{
.appVersion = "3306";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehook Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhook Acircumflextilde Adieresis Adotbelow Agrave Ahook Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcroat Eth E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhook Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehook Emacron Eogonek Etilde Schwa Ezh Ezhcaron F G Gbreve Gcaron Gcircumflex Gcommaaccent Gdotaccent Gmacron Gstroke H Hbar Hcircumflex I IJ Iacute Ibreve Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihook Imacron Iogonek Itilde J Jacute Jcircumflex K Kcaron Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Ntilde Eng O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhook Ocircumflextilde Odieresis Odotbelow Ograve Ohook Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhook Ohorntilde Ohungarumlaut Omacron Oslash Oslashacute Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhook Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhook Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhook Ytilde Z Zacute Zcaron Zdotaccent Saltillo Lcommaaccent.loclMAH Ncommaaccent.loclMAH M.ss01 W.ss01 Wacute.ss01 Wcircumflex.ss01 Wdieresis.ss01 Wgrave.ss01";
name = Uppercase;
}
);
date = "2021-02-10 03:02:16 +0000";
familyName = Index;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn AZE;
languagesystem latn CRT;
languagesystem latn KAZ;
languagesystem latn TAT;
languagesystem latn TRK;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn MAH;
languagesystem latn CAT;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature locl;
feature subs;
feature sinf;
feature sups;
feature numr;
feature dnom;
feature frac;
feature ordn;
feature case;
feature ss01;
feature ss02;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_DFLT_1 {
	lookupflag 0;
	sub brevecomb acutecomb by brevecomb_acutecomb;
	sub brevecomb gravecomb by brevecomb_gravecomb;
	sub brevecomb tildecomb by brevecomb_tildecomb;
	sub circumflexcomb acutecomb by circumflexcomb_acutecomb;
	sub circumflexcomb gravecomb by circumflexcomb_gravecomb;
	sub circumflexcomb tildecomb by circumflexcomb_tildecomb;
	sub ringcomb acutecomb by ringcomb_acutecomb;
} ccmp_DFLT_1;

lookup ccmp_Other_1 {
	lookupflag 0;
	@Markscomb = [dieresiscomb dotaccentcomb gravecomb acutecomb hungarumlautcomb circumflexcomb circumflexcomb_gravecomb circumflexcomb_acutecomb circumflexcomb_tildecomb caroncomb brevecomb brevecomb_gravecomb brevecomb_acutecomb brevecomb_tildecomb ringcomb ringcomb_acutecomb tildecomb macroncomb];
	@MarkscombCase = [dieresiscomb.case dotaccentcomb.case gravecomb.case acutecomb.case hungarumlautcomb.case circumflexcomb.case circumflexcomb_gravecomb.case circumflexcomb_acutecomb.case circumflexcomb_tildecomb.case caroncomb.case brevecomb.case brevecomb_gravecomb.case brevecomb_acutecomb.case brevecomb_tildecomb.case ringcomb.case ringcomb_acutecomb.case tildecomb.case macroncomb.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub fi by f i;
	sub fl by f l;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language AZE;
lookup locl_latn_0 {
	sub i by idotaccent;
} locl_latn_0;
language CRT;
lookup locl_latn_0;
language KAZ;
lookup locl_latn_0;
language TAT;
lookup locl_latn_0;
language TRK;
lookup locl_latn_0;

script latn;
language ROM;
lookup locl_latn_1 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_1;
language MOL;
lookup locl_latn_1;

script latn;
language MAH;
lookup locl_latn_2 {
	sub Lcommaaccent by Lcommaaccent.loclMAH;
	sub Ncommaaccent by Ncommaaccent.loclMAH;
	sub lcommaaccent by lcommaaccent.loclMAH;
	sub ncommaaccent by ncommaaccent.loclMAH;
} locl_latn_2;

script latn;
language CAT;
lookup locl_latn_3 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_3;

script latn;
language NLD;
lookup locl_latn_4 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_4;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "sub dieresiscomb by dieresiscomb.case;
sub dotaccentcomb by dotaccentcomb.case;
sub gravecomb by gravecomb.case;
sub acutecomb by acutecomb.case;
sub hungarumlautcomb by hungarumlautcomb.case;
sub circumflexcomb by circumflexcomb.case;
sub circumflexcomb_gravecomb by circumflexcomb_gravecomb.case;
sub circumflexcomb_acutecomb by circumflexcomb_acutecomb.case;
sub circumflexcomb_tildecomb by circumflexcomb_tildecomb.case;
sub caroncomb by caroncomb.case;
sub brevecomb by brevecomb.case;
sub brevecomb_gravecomb by brevecomb_gravecomb.case;
sub brevecomb_acutecomb by brevecomb_acutecomb.case;
sub brevecomb_tildecomb by brevecomb_tildecomb.case;
sub ringcomb by ringcomb.case;
sub ringcomb_acutecomb by ringcomb_acutecomb.case;
sub tildecomb by tildecomb.case;
sub macroncomb by macroncomb.case;
";
tag = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub i l l by i_l_l;
sub i l by i_l;
sub l i by l_i;
sub l l by l_l;
sub t t by t_t;
";
tag = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f i by fi;
sub f l by fl;
";
tag = liga;
},
{
automatic = 1;
code = "sub M by M.ss01;
sub W by W.ss01;
sub Wacute by Wacute.ss01;
sub Wcircumflex by Wcircumflex.ss01;
sub Wdieresis by Wdieresis.ss01;
sub Wgrave by Wgrave.ss01;
sub a by a.ss01;
sub aacute by aacute.ss01;
sub abreve by abreve.ss01;
sub abreveacute by abreveacute.ss01;
sub abrevedotbelow by abrevedotbelow.ss01;
sub abrevegrave by abrevegrave.ss01;
sub abrevetilde by abrevetilde.ss01;
sub acaron by acaron.ss01;
sub acircumflex by acircumflex.ss01;
sub acircumflexacute by acircumflexacute.ss01;
sub acircumflexdotbelow by acircumflexdotbelow.ss01;
sub acircumflexgrave by acircumflexgrave.ss01;
sub acircumflextilde by acircumflextilde.ss01;
sub adieresis by adieresis.ss01;
sub adotbelow by adotbelow.ss01;
sub agrave by agrave.ss01;
sub amacron by amacron.ss01;
sub aogonek by aogonek.ss01;
sub aring by aring.ss01;
sub aringacute by aringacute.ss01;
sub atilde by atilde.ss01;
sub ae by ae.ss01;
sub aeacute by aeacute.ss01;
sub g by g.ss01;
sub gbreve by gbreve.ss01;
sub gcircumflex by gcircumflex.ss01;
sub gcommaaccent by gcommaaccent.ss01;
sub gdotaccent by gdotaccent.ss01;
sub gstroke by gstroke.ss01;
sub m by m.ss01;
sub oe by oe.ss01;
sub w by w.ss01;
sub wacute by wacute.ss01;
sub wcircumflex by wcircumflex.ss01;
sub wdieresis by wdieresis.ss01;
sub wgrave by wgrave.ss01;
sub at by at.ss01;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss01;
},
{
automatic = 1;
code = "sub germandbls by germandbls.ss02;
";
tag = ss02;
}
);
fontMaster = (
{
axesValues = (
100
);
iconName = Light;
id = master01;
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Thin;
stemValues = (
59,
54
);
userData = {
GSOffsetHorizontal = 1;
GSOffsetVertical = 1;
};
},
{
axesValues = (
400
);
id = "661A777E-9960-44AA-8623-3AD7C626B4F3";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Regular;
stemValues = (
225,
191
);
},
{
axesValues = (
700
);
iconName = Bold;
id = "D7CFBB37-D300-46E8-A355-ECFF19545BAA";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Bold;
stemValues = (
417,
324
);
}
);
instances = (
{
name = Regular;
type = variable;
},
{
axesValues = (
100
);
instanceInterpolations = {
master01 = 1;
};
name = Thin;
weightClass = 100;
},
{
axesValues = (
200
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.33333;
master01 = 0.66667;
};
name = Ultralight;
visible = 0;
weightClass = 200;
},
{
axesValues = (
300
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.66667;
master01 = 0.33333;
};
name = Light;
weightClass = 300;
},
{
axesValues = (
400
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 1;
};
name = Regular;
},
{
axesValues = (
450
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.83333;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.16667;
};
name = Text;
},
{
axesValues = (
500
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.66667;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.33333;
};
name = Medium;
weightClass = 500;
},
{
axesValues = (
600
);
instanceInterpolations = {
"661A777E-9960-44AA-8623-3AD7C626B4F3" = 0.33333;
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 0.66667;
};
name = Semibold;
weightClass = 600;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
isBold = 1;
linkStyle = Regular;
name = Bold;
weightClass = 700;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
name = Heavy;
weightClass = 800;
},
{
axesValues = (
700
);
instanceInterpolations = {
"D7CFBB37-D300-46E8-A355-ECFF19545BAA" = 1;
};
name = Black;
weightClass = 900;
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
note = "How razorback-jumping frogs can level six piqued gymnasts!";
properties = (
{
key = copyrights;
values = (
{
language = dflt;
value = "Copyright 2024 Dream Tyoe. All rights reserved.";
}
);
},
{
key = designers;
values = (
{
language = DEU;
value = "Andreas Faust";
},
{
language = DEU;
value = "Stefan Endress";
}
);
},
{
key = designerURL;
value = "http://www.dreamtype.com";
},
{
key = licenses;
values = (
{
language = dflt;
value = "This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: http://scripts.sil.org/OFL";
}
);
},
{
key = manufacturers;
values = (
{
language = dflt;
value = DreamType;
}
);
},
{
key = manufacturerURL;
value = "http://www.dreamtype.com";
},
{
key = versionString;
value = "Version 2.003 2021";
}
);
settings = {
disablesNiceNames = 1;
};
stems = (
{
name = vStem0;
},
{
horizontal = 1;
name = hStem0;
}
);
unitsPerEm = 2816;
userData = {
UFO.lib = {
"com.type-invaders.encoding" = (
.notdef,
a,
a.alt01,
b,
c,
d,
e,
f,
g,
g.alt01,
g.alt02,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
zero,
zero.alt01,
zero.alt02,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
ampersand,
at,
hyphen,
softhyphen,
endash,
emdash,
underscore,
period,
ellipsis,
colon,
comma,
semicolon,
questiongreek,
quotesingle,
quotedbl,
quoteleft,
quoteright,
quotedblleft,
quotedblright,
quotesinglbase,
quotedblbase,
guilsinglleft,
guilsinglright,
guillemotleft,
guillemotright,
exclamdown,
exclam,
questiondown,
question,
parenleft,
parenright,
bracketleft,
bracketright,
braceleft,
braceright,
slash,
backslash,
fraction,
divisionslash,
percent,
perthousand,
bar,
brokenbar,
section,
paragraph,
copyright,
registered,
trademark,
ordfeminine,
ordmasculine,
degree,
prime,
primedbl,
asterisk,
dagger,
daggerdbl,
numbersign,
asciicircum,
asciitilde,
plus,
minus,
plusminus,
multiply,
divide,
equal,
approxequal,
notequal,
less,
greater,
lessequal,
greaterequal,
periodcentered,
anoteleia,
bullet,
lozenge,
logicalnot,
radical,
integral,
infinity,
estimated,
litre,
numerosign,
partialdiff,
currency,
cent,
Euro,
florin,
sterling,
dollar,
yen,
baht,
coloncurrency,
lira,
naira,
rupee,
won,
sheqel,
dong,
kip,
tugrik,
peso,
guarani,
hryvnia,
cedi,
tenge,
rupeeindian,
liraturkish,
ruble,
bitcoin,
fi,
fl,
aacute,
abreve,
acaron,
acircumflex,
adieresis,
adotbelow,
agrave,
ahook,
amacron,
aogonek,
aring,
aringacute,
atilde,
abreveacute,
abrevedotbelow,
abrevegrave,
abrevehook,
abrevetilde,
acircumflexacute,
acircumflexdotbelow,
acircumflexgrave,
acircumflexhook,
acircumflextilde,
aacute.alt01,
abreve.alt01,
acaron.alt01,
acircumflex.alt01,
adieresis.alt01,
adotbelow.alt01,
agrave.alt01,
ahook.alt01,
amacron.alt01,
aogonek.alt01,
aring.alt01,
aringacute.alt01,
atilde.alt01,
abreveacute.alt01,
abrevedotbelow.alt01,
abrevegrave.alt01,
abrevehook.alt01,
abrevetilde.alt01,
acircumflexacute.alt01,
acircumflexdotbelow.alt01,
acircumflexgrave.alt01,
acircumflexhook.alt01,
acircumflextilde.alt01,
ae,
aeacute,
cacute,
ccaron,
ccedilla,
ccircumflex,
cdotaccent,
dcaron,
dcroat,
eth,
eacute,
ebreve,
ecaron,
ecircumflex,
edieresis,
edotaccent,
edotbelow,
egrave,
ehook,
emacron,
eogonek,
etilde,
ecircumflexacute,
ecircumflexdotbelow,
ecircumflexgrave,
ecircumflexhook,
ecircumflextilde,
schwa,
gbreve,
gcircumflex,
gcommaaccent,
gdotaccent,
gbreve.alt01,
gcircumflex.alt01,
gcommaaccent.alt01,
gdotaccent.alt01,
hbar,
hcircumflex,
dotlessi,
iacute,
ibreve,
icaron,
icircumflex,
idieresis,
idotbelow,
igrave,
ihook,
imacron,
iogonek,
itilde,
ij,
ijacute,
dotlessj,
jacute,
jcircumflex,
kcommaaccent,
kgreenlandic,
lacute,
lcaron,
lcommaaccent,
ldot,
lslash,
nacute,
ncaron,
ncommaaccent,
ntilde,
napostrophe,
eng,
oacute,
obreve,
ocaron,
ocircumflex,
odieresis,
odotbelow,
ograve,
ohook,
ohungarumlaut,
omacron,
oslash,
oslashacute,
otilde,
ohorn,
ohornacute,
ohorndotbelow,
ohorngrave,
ohornhook,
ohorntilde,
ocircumflexacute,
ocircumflexdotbelow,
ocircumflexgrave,
ocircumflexhook,
ocircumflextilde,
oe,
racute,
rcaron,
rcommaaccent,
sacute,
scaron,
scedilla,
scircumflex,
scommaaccent,
longs,
germandbls,
germandbls.alt01,
tbar,
tcaron,
tcommaaccent,
tcedilla,
thorn,
uacute,
ubreve,
ucaron,
ucircumflex,
udieresis,
udotbelow,
ugrave,
uhook,
uhungarumlaut,
umacron,
uogonek,
uring,
utilde,
uhorn,
uhornacute,
uhorndotbelow,
uhorngrave,
uhornhook,
uhorntilde,
udieresismacron,
udieresisacute,
udieresisgrave,
udieresiscaron,
wacute,
wcircumflex,
wdieresis,
wgrave,
yacute,
ycircumflex,
ydieresis,
ydotbelow,
ygrave,
yhook,
ytilde,
zacute,
zcaron,
zdotaccent,
Aacute,
Abreve,
Acaron,
Acircumflex,
Adieresis,
Adotbelow,
Agrave,
Ahook,
Amacron,
Aogonek,
Aring,
Aringacute,
Atilde,
Abreveacute,
Abrevedotbelow,
Abrevegrave,
Abrevehook,
Abrevetilde,
Acircumflexacute,
Acircumflexdotbelow,
Acircumflexgrave,
Acircumflexhook,
Acircumflextilde,
AE,
AEacute,
Cacute,
Ccaron,
Ccedilla,
Ccircumflex,
Cdotaccent,
Dcaron,
Dcroat,
Eth,
Eacute,
Ebreve,
Ecaron,
Ecircumflex,
Edieresis,
Edotaccent,
Edotbelow,
Egrave,
Ehook,
Emacron,
Eogonek,
Etilde,
Ecircumflexacute,
Ecircumflexdotbelow,
Ecircumflexgrave,
Ecircumflexhook,
Ecircumflextilde,
Schwa,
Gbreve,
Gcircumflex,
Gcommaaccent,
Gdotaccent,
Hbar,
Hcircumflex,
Iacute,
Ibreve,
Icaron,
Icircumflex,
Idieresis,
Idotaccent,
Idotbelow,
Igrave,
Ihook,
Imacron,
Iogonek,
Itilde,
IJ,
IJacute,
Jacute,
Jcircumflex,
Kcommaaccent,
Lacute,
Lcaron,
Lcommaaccent,
Ldot,
Lslash,
Nacute,
Ncaron,
Ncommaaccent,
Ntilde,
Eng,
Oacute,
Obreve,
Ocaron,
Ocircumflex,
Odieresis,
Odotbelow,
Ograve,
Ohook,
Ohungarumlaut,
Omacron,
Oslash,
Oslashacute,
Otilde,
Ohorn,
Ohornacute,
Ohorndotbelow,
Ohorngrave,
Ohornhook,
Ohorntilde,
Ocircumflexacute,
Ocircumflexdotbelow,
Ocircumflexgrave,
Ocircumflexhook,
Ocircumflextilde,
OE,
Racute,
Rcaron,
Rcommaaccent,
Sacute,
Scaron,
Scedilla,
Scircumflex,
Scommaaccent,
Germandbls,
Tbar,
Tcaron,
Tcommaaccent,
Tcedilla,
Thorn,
Uacute,
Ubreve,
Ucaron,
Ucircumflex,
Udieresis,
Udotbelow,
Ugrave,
Uhook,
Uhungarumlaut,
Umacron,
Uogonek,
Uring,
Utilde,
Uhorn,
Uhornacute,
Uhorndotbelow,
Uhorngrave,
Uhornhook,
Uhorntilde,
Udieresismacron,
Udieresisacute,
Udieresisgrave,
Udieresiscaron,
Wacute,
Wcircumflex,
Wdieresis,
Wgrave,
Yacute,
Ycircumflex,
Ydotbelow,
Ydieresis,
Ygrave,
Yhook,
Ytilde,
Zacute,
Zcaron,
Zdotaccent,
mu,
Delta,
product,
summation,
Omega,
alpha,
alpha.alt01,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
kappa,
lambda,
uni03BC,
nu,
xi,
omicron,
pi,
rho,
sigma1,
sigma,
tau,
upsilon,
phi,
chi,
psi,
omega,
Alpha,
Beta,
Gamma,
uni0394,
Epsilon,
Zeta,
Eta,
Theta,
Iota,
Kappa,
Lambda,
Mu,
Nu,
Xi,
Omicron,
Pi,
Rho,
Sigma,
Tau,
Upsilon,
Phi,
Chi,
Psi,
uni03A9,
alphatonos,
alphatonos.alt01,
epsilontonos,
etatonos,
iotatonos,
iotadieresis,
iotadieresistonos,
omicrontonos,
upsilontonos,
upsilondieresis,
upsilondieresistonos,
omegatonos,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Iotadieresis,
Omicrontonos,
Upsilontonos,
Upsilondieresis,
Omegatonos,
uni0430,
uni0430.alt01,
uni0431,
uni0432,
uni0433,
uni0434,
uni0435,
uni0436,
uni0437,
uni0438,
uni0439,
uni043A,
uni043B,
uni043C,
uni043D,
uni043E,
uni043F,
uni0440,
uni0441,
uni0442,
uni0443,
uni0444,
uni0445,
uni0446,
uni0447,
uni0448,
uni0449,
uni044A,
uni044B,
uni044C,
uni044D,
uni044E,
uni044F,
uni0410,
uni0411,
uni0412,
uni0413,
uni0414,
uni0415,
uni0416,
uni0417,
uni0418,
uni0419,
uni041A,
uni041B,
uni041C,
uni041D,
uni041E,
uni041F,
uni0420,
uni0421,
uni0422,
uni0423,
uni0424,
uni0425,
uni0426,
uni0427,
uni0428,
uni0429,
uni042A,
uni042B,
uni042C,
uni042D,
uni042E,
uni042F,
uni04D3,
uni04D1,
uni04D3.alt01,
uni04D1.alt01,
uni04D5,
uni0453,
uni0491,
uni0493,
uni0495,
uni0450,
uni0451,
uni04D7,
uni0454,
uni04DD,
uni04C2,
uni0497,
uni04DF,
uni0499,
uni04CF,
uni04E5,
uni045D,
uni04E3,
uni045C,
uni049B,
uni049D,
uni04A1,
uni0459,
uni04A3,
uni045A,
uni04A5,
uni04E7,
uni0473,
uni04E9,
uni04AB,
uni04EF,
uni04F1,
uni04F3,
uni045E,
uni04AF,
uni04B1,
uni04B3,
uni04F5,
uni04B7,
uni04B9,
uni04F9,
uni0455,
uni045F,
uni0456,
uni0457,
uni0458,
uni0452,
uni045B,
uni04BB,
uni04D9,
uni04D2,
uni04D0,
uni04D4,
uni0403,
uni0490,
uni0492,
uni0494,
uni0400,
uni0401,
uni04D6,
uni0404,
uni04DC,
uni04C1,
uni0496,
uni04DE,
uni0498,
uni04C0,
uni04E4,
uni040D,
uni04E2,
uni040C,
uni049A,
uni049C,
uni04A0,
uni0409,
uni04A2,
uni040A,
uni04A4,
uni04E6,
uni0472,
uni04E8,
uni04AA,
uni04EE,
uni04F0,
uni04F2,
uni040E,
uni04AE,
uni04B0,
uni04B2,
uni04F4,
uni04B6,
uni04B8,
uni04F8,
uni0405,
uni040F,
uni0406,
uni0407,
uni0408,
uni0402,
uni040B,
uni04BA,
uni04D8,
zerosuperior,
onesuperior,
twosuperior,
threesuperior,
foursuperior,
fivesuperior,
sixsuperior,
sevensuperior,
eightsuperior,
ninesuperior,
zeroinferior,
oneinferior,
twoinferior,
threeinferior,
fourinferior,
fiveinferior,
sixinferior,
seveninferior,
eightinferior,
nineinferior,
zero.numr,
one.numr,
two.numr,
three.numr,
four.numr,
five.numr,
six.numr,
seven.numr,
eight.numr,
nine.numr,
zero.dnom,
one.dnom,
two.dnom,
three.dnom,
four.dnom,
five.dnom,
six.dnom,
seven.dnom,
eight.dnom,
nine.dnom,
onehalf,
uni2153,
uni2154,
onequarter,
threequarters,
uni2155,
uni2156,
uni2157,
uni2158,
uni2159,
uni215A,
uni2150,
uni215B,
uni215C,
uni215D,
uni215E,
uni2151,
checkmark,
crossmark,
arrowleft,
arrowup,
arrowdown,
arrowright,
arrowupleft,
arrowupright,
arrowdownleft,
arrowdownright,
arrowupleftcorner,
arrowdownleftcorner,
arrowleftupcorner,
arrowrightupcorner,
arrowleftdowncorner,
arrowrightdowncorner,
arrowuprightcorner,
arrowdownrightcorner,
arrowleftarrowright,
arrowrightarrowleft,
arrowleftright,
arrowupdown,
arrowdowncounterclockhalf,
arrowdownclockhalf,
arrowhookleft,
arrowhookright,
arrowupleftcounterclock,
arrowuprightclock,
lighthorzbxd,
heavyhorzbxd,
lightvertbxd,
heavyvertbxd,
lighttrpldashhorzbxd,
heavytrpldashhorzbxd,
lighttrpldashvertbxd,
heavytrpldashvertbxd,
lightquaddashhorzbxd,
heavyquaddashhorzbxd,
lightquaddashvertbxd,
heavyquaddashvertbxd,
lightdnrightbxd,
dnlightrightheavybxd,
dnheavyrightlightbxd,
heavydnrightbxd,
lightdnleftbxd,
dnlightleftheavybxd,
dnheavyleftlightbxd,
heavydnleftbxd,
lightuprightbxd,
uplightrightheavybxd,
upheavyrightlightbxd,
heavyuprightbxd,
lightupleftbxd,
uplightleftheavybxd,
upheavyleftlightbxd,
heavyupleftbxd,
lightvertrightbxd,
vertlightrightheavybxd,
upheavyrightdnlightbxd,
dnheavyrightuplightbxd,
vertheavyrightlightbxd,
dnlightrightupheavybxd,
uplightrightdnheavybxd,
heavyvertrightbxd,
lightvertleftbxd,
vertlightleftheavybxd,
upheavyleftdnlightbxd,
dnheavyleftuplightbxd,
vertheavyleftlightbxd,
dnlightleftupheavybxd,
uplightleftdnheavybxd,
heavyvertleftbxd,
lightdnhorzbxd,
leftheavyrightdnlightbxd,
rightheavyleftdnlightbxd,
dnlighthorzheavybxd,
dnheavyhorzlightbxd,
rightlightleftdnheavybxd,
leftlightrightdnheavybxd,
heavydnhorzbxd,
lightuphorzbxd,
leftheavyrightuplightbxd,
rightheavyleftuplightbxd,
uplighthorzheavybxd,
upheavyhorzlightbxd,
rightlightleftupheavybxd,
leftlightrightupheavybxd,
heavyuphorzbxd,
lightverthorzbxd,
leftheavyrightvertlightbxd,
rightheavyleftvertlightbxd,
vertlighthorzheavybxd,
upheavydnhorzlightbxd,
dnheavyuphorzlightbxd,
vertheavyhorzlightbxd,
leftupheavyrightdnlightbxd,
rightupheavyleftdnlightbxd,
leftdnheavyrightuplightbxd,
rightdnheavyleftuplightbxd,
dnlightuphorzheavybxd,
uplightdnhorzheavybxd,
rightlightleftvertheavybxd,
leftlightrightvertheavybxd,
heavyverthorzbxd,
lightdbldashhorzbxd,
heavydbldashhorzbxd,
lightdbldashvertbxd,
heavydbldashvertbxd,
dblhorzbxd,
dblvertbxd,
dnsngrightdblbxd,
dndblrightsngbxd,
dbldnrightbxd,
dnsngleftdblbxd,
dndblleftsngbxd,
dbldnleftbxd,
upsngrightdblbxd,
updblrightsngbxd,
dbluprightbxd,
upsngleftdblbxd,
updblleftsngbxd,
dblupleftbxd,
vertsngrightdblbxd,
vertdblrightsngbxd,
dblvertrightbxd,
vertsngleftdblbxd,
vertdblleftsngbxd,
dblvertleftbxd,
dnsnghorzdblbxd,
dndblhorzsngbxd,
dbldnhorzbxd,
upsnghorzdblbxd,
updblhorzsngbxd,
dbluphorzbxd,
vertsnghorzdblbxd,
vertdblhorzsngbxd,
dblverthorzbxd,
lightarcdnrightbxd,
lightarcdnleftbxd,
lightarcupleftbxd,
lightarcuprightbxd,
lightdiaguprightdnleftbxd,
lightdiagupleftdnrightbxd,
lightdiagcrossbxd,
lightleftbxd,
lightupbxd,
lightrightbxd,
lightdnbxd,
heavyleftbxd,
heavyupbxd,
heavyrightbxd,
heavydnbxd,
lightleftheavyrightbxd,
lightupheavydnbxd,
heavyleftlightrightbxd,
heavyuplightdnbxd,
uphalfblock,
dneighthblock,
dnquarterblock,
dnthreeeighthsblock,
dnhalfblock,
dnfiveeighthsblock,
dnthreequartersblock,
dnseveneighthsblock,
fullblock,
leftseveneighthsblock,
leftthreequartersblock,
leftfiveeighthsblock,
lefthalfblock,
leftthreeeighthsblock,
leftquarterblock,
lefteighthblock,
righthalfblock,
lightshade,
mediumshade,
darkshade,
upeighthblock,
righteighthblock,
dnleftquadrant,
dnrightquadrant,
upleftquadrant,
upleftdnleftdnrightquadrant,
upleftdnrightquadrant,
upleftuprightdnleftquadrant,
upleftuprightdnrightquadrant,
uprightquadrant,
uprightdnleftquadrant,
uprightdnleftdnrightquadrant,
tilde,
tilde.alt01,
macron,
macron.alt01,
dotaccent,
dieresis,
dieresis.alt01,
hungarumlaut,
acute,
grave,
circumflex,
circumflex.alt01,
caron,
caron.alt01,
breve,
breve.alt01,
breve.cyrl,
ring,
ringacute,
commaturnedtop,
caronslovak,
cedilla,
ogonek,
tonos,
dieresistonos,
tildecomb,
macroncomb,
dotaccentcomb,
dieresiscomb,
hungarumlautcomb,
acutecomb,
gravecomb,
circumflexcomb,
caroncomb,
brevecomb,
ringcomb,
hookcomb,
commaturnedtopcomb,
caronslovakcomb,
horncomb,
cedillacomb,
dotbelowcomb,
commabelowcomb,
ogonekcomb,
breveacute,
brevegrave,
brevehook,
brevetilde,
dieresisacute,
dieresiscaron,
dieresisgrave,
circumflexacute,
circumflexbreve,
circumflexgrave,
circumflexhook,
dieresismacron,
circumflextilde,
tilde.case,
tilde.alt01.case,
macron.case,
dotaccent.case,
dieresis.case,
hungarumlaut.case,
acute.case,
grave.case,
circumflex.case,
caron.case,
breve.case,
breve.cyrl_case,
ring.case,
ringacute.case,
tonos.case,
hookcomb.case,
breveacute.case,
brevegrave.case,
brevehook.case,
brevetilde.case,
dieresisacute.case,
dieresiscaron.case,
dieresisgrave.case,
circumflexacute.case,
circumflexbreve.case,
circumflexgrave.case,
circumflexhook.case,
dieresismacron.case,
circumflextilde.case,
space,
nbspace,
fcclogo,
celogo
);
com.typemytype.robofont.layerOrder = (
);
};
UFOFormat = 2;
};
versionMajor = 2;
versionMinor = 3;
}
