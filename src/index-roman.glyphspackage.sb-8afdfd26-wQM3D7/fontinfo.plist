{
.appVersion = "3300";
.formatVersion = 3;
axes = (
{
name = Weight;
tag = wght;
}
);
classes = (
{
automatic = 1;
code = "A Aacute Abreve Abreveacute Abrevedotbelow Abrevegrave Abrevehook Abrevetilde Acaron Acircumflex Acircumflexacute Acircumflexdotbelow Acircumflexgrave Acircumflexhook Acircumflextilde Adieresis Adotbelow Agrave Ahook Amacron Aogonek Aring Aringacute Atilde AE AEacute B C Cacute Ccaron Ccedilla Ccircumflex Cdotaccent D Dcaron Dcroat Eth E Eacute Ebreve Ecaron Ecircumflex Ecircumflexacute Ecircumflexdotbelow Ecircumflexgrave Ecircumflexhook Ecircumflextilde Edieresis Edotaccent Edotbelow Egrave Ehook Emacron Eogonek Etilde Schwa F G Gbreve Gcircumflex Gcommaaccent Gdotaccent H Hbar Hcircumflex I IJ Iacute Ibreve Icaron Icircumflex Idieresis Idotaccent Idotbelow Igrave Ihook Imacron Iogonek Itilde J Jacute Jcircumflex K Kcommaaccent L Lacute Lcaron Lcommaaccent Ldot Lslash M N Nacute Ncaron Ncommaaccent Ntilde Eng O Oacute Obreve Ocaron Ocircumflex Ocircumflexacute Ocircumflexdotbelow Ocircumflexgrave Ocircumflexhook Ocircumflextilde Odieresis Odotbelow Ograve Ohook Ohorn Ohornacute Ohorndotbelow Ohorngrave Ohornhook Ohorntilde Ohungarumlaut Omacron Oslash Oslashacute Otilde OE P Thorn Q R Racute Rcaron Rcommaaccent S Sacute Scaron Scedilla Scircumflex Scommaaccent Germandbls T Tbar Tcaron Tcedilla Tcommaaccent U Uacute Ubreve Ucaron Ucircumflex Udieresis Udieresisacute Udieresiscaron Udieresisgrave Udieresismacron Udotbelow Ugrave Uhook Uhorn Uhornacute Uhorndotbelow Uhorngrave Uhornhook Uhorntilde Uhungarumlaut Umacron Uogonek Uring Utilde V W Wacute Wcircumflex Wdieresis Wgrave X Y Yacute Ycircumflex Ydieresis Ydotbelow Ygrave Yhook Ytilde Z Zacute Zcaron Zdotaccent M.ss01 W.ss01 Wacute.ss01 Wcircumflex.ss01 Wdieresis.ss01 Wgrave.ss01";
name = Uppercase;
}
);
date = "2021-02-10 03:02:16 +0000";
familyName = Index;
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem latn dflt;
languagesystem latn ROM;
languagesystem latn MOL;
languagesystem latn CAT;
languagesystem latn NLD;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature ordn;
feature frac;
feature numr;
feature dnom;
feature sups;
feature sinf;
feature ss01;
feature locl;
feature subs;
feature case;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_Other_1 {
	lookupflag 0;
	@Markscomb = [dieresis dotaccent grave acute hungarumlaut circumflex caron breve ring tilde macron tilde.alt01];
	@MarkscombCase = [dieresis.case dotaccent.case grave.case acute.case hungarumlaut.case circumflex.case caron.case breve.case ring.case tilde.case macron.case tilde.alt01.case];
	sub @Markscomb @Markscomb' by @MarkscombCase;
	sub @Uppercase @Markscomb' by @MarkscombCase;
} ccmp_Other_1;

lookup ccmp_Other_2 {
	lookupflag 0;
	sub @Markscomb' @MarkscombCase by @MarkscombCase;
	sub @MarkscombCase @Markscomb' by @MarkscombCase;
} ccmp_Other_2;

lookup ccmp_latn_1 {
	lookupflag 0;
	sub fi by f i;
	sub fl by f l;
} ccmp_latn_1;

script latn;
lookup ccmp_latn_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "script latn;
language ROM;
lookup locl_latn_0 {
	sub Scedilla by Scommaaccent;
	sub scedilla by scommaaccent;
	sub Tcedilla by Tcommaaccent;
	sub tcedilla by tcommaaccent;
} locl_latn_0;
language MOL;
lookup locl_latn_0;

script latn;
language CAT;
lookup locl_latn_1 {
	sub  l' periodcentered' l by ldot;
	sub  L' periodcentered' L by Ldot;
} locl_latn_1;

script latn;
language NLD;
lookup locl_latn_2 {
	sub iacute j' by jacute;
	sub Iacute J' by Jacute;
} locl_latn_2;
";
tag = locl;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = subs;
},
{
automatic = 1;
code = "sub zero by zeroinferior;
sub one by oneinferior;
sub two by twoinferior;
sub three by threeinferior;
sub four by fourinferior;
sub five by fiveinferior;
sub six by sixinferior;
sub seven by seveninferior;
sub eight by eightinferior;
sub nine by nineinferior;
";
tag = sinf;
},
{
automatic = 1;
code = "sub zero by zerosuperior;
sub one by onesuperior;
sub two by twosuperior;
sub three by threesuperior;
sub four by foursuperior;
sub five by fivesuperior;
sub six by sixsuperior;
sub seven by sevensuperior;
sub eight by eightsuperior;
sub nine by ninesuperior;
";
tag = sups;
},
{
automatic = 1;
code = "sub zero by zero.numr;
sub one by one.numr;
sub two by two.numr;
sub three by three.numr;
sub four by four.numr;
sub five by five.numr;
sub six by six.numr;
sub seven by seven.numr;
sub eight by eight.numr;
sub nine by nine.numr;
";
tag = numr;
},
{
automatic = 1;
code = "sub zero by zero.dnom;
sub one by one.dnom;
sub two by two.dnom;
sub three by three.dnom;
sub four by four.dnom;
sub five by five.dnom;
sub six by six.dnom;
sub seven by seven.dnom;
sub eight by eight.dnom;
sub nine by nine.dnom;
";
tag = dnom;
},
{
automatic = 1;
code = "lookup FRAC {
	sub slash by fraction;
} FRAC;
lookup UP {
	sub [zero one two three four five six seven eight nine] by [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr];
} UP;
lookup DOWN {
	sub fraction [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
	sub [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom] [zero.numr one.numr two.numr three.numr four.numr five.numr six.numr seven.numr eight.numr nine.numr]' by [zero.dnom one.dnom two.dnom three.dnom four.dnom five.dnom six.dnom seven.dnom eight.dnom nine.dnom];
} DOWN;
";
tag = frac;
},
{
automatic = 1;
code = "sub [zero one two three four five six seven eight nine] [A a]' by ordfeminine;
sub [zero one two three four five six seven eight nine] [O o]' by ordmasculine;
";
tag = ordn;
},
{
automatic = 1;
code = "sub dieresis by dieresis.case;
sub dotaccent by dotaccent.case;
sub grave by grave.case;
sub acute by acute.case;
sub hungarumlaut by hungarumlaut.case;
sub circumflex by circumflex.case;
sub caron by caron.case;
sub breve by breve.case;
sub ring by ring.case;
sub tilde by tilde.case;
sub macron by macron.case;
sub tilde.alt01 by tilde.alt01.case;
sub breveacute by breveacute.case;
sub brevegrave by brevegrave.case;
sub brevehook by brevehook.case;
sub brevetilde by brevetilde.case;
sub circumflexacute by circumflexacute.case;
sub circumflexbreve by circumflexbreve.case;
sub circumflexgrave by circumflexgrave.case;
sub circumflexhook by circumflexhook.case;
sub circumflextilde by circumflextilde.case;
sub dieresisacute by dieresisacute.case;
sub dieresiscaron by dieresiscaron.case;
sub dieresisgrave by dieresisgrave.case;
sub dieresismacron by dieresismacron.case;
sub hookcomb by hookcomb.case;
sub ringacute by ringacute.case;
";
tag = case;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub i l l by i_l_l;
sub i l by i_l;
sub l i by l_i;
sub l l by l_l;
sub t t by t_t;
";
tag = dlig;
},
{
automatic = 1;
code = "lookupflag IgnoreMarks;
sub f i by fi;
sub f l by fl;
";
tag = liga;
},
{
automatic = 1;
code = "sub M by M.ss01;
sub W by W.ss01;
sub Wacute by Wacute.ss01;
sub Wcircumflex by Wcircumflex.ss01;
sub Wdieresis by Wdieresis.ss01;
sub Wgrave by Wgrave.ss01;
sub m by m.ss01;
sub w by w.ss01;
sub wacute by wacute.ss01;
sub wcircumflex by wcircumflex.ss01;
sub wdieresis by wdieresis.ss01;
sub wgrave by wgrave.ss01;
";
labels = (
{
language = dflt;
value = "";
}
);
tag = ss01;
}
);
fontMaster = (
{
axesValues = (
100
);
iconName = Light;
id = master01;
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Thin;
stemValues = (
59,
54
);
},
{
axesValues = (
400
);
id = "661A777E-9960-44AA-8623-3AD7C626B4F3";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Regular;
stemValues = (
225,
191
);
},
{
axesValues = (
700
);
iconName = Bold;
id = "D7CFBB37-D300-46E8-A355-ECFF19545BAA";
metricValues = (
{
pos = 2196;
},
{
over = 34;
pos = 1966;
},
{
over = 34;
pos = 1453;
},
{
over = -34;
},
{
pos = -620;
},
{
}
);
name = Bold;
stemValues = (
417,
324
);
}
);
